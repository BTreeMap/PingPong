/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __PINGPONG_KERN_BPF_SKEL_H__
#define __PINGPONG_KERN_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

#define BPF_SKEL_SUPPORTS_MAP_AUTO_ATTACH 1

struct pingpong_kern_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *events;
	} maps;
	struct {
		struct bpf_program *handle_tcp_sendmsg;
		struct bpf_program *handle_tcp_rcv;
	} progs;
	struct {
		struct bpf_link *handle_tcp_sendmsg;
		struct bpf_link *handle_tcp_rcv;
	} links;

#ifdef __cplusplus
	static inline struct pingpong_kern_bpf *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct pingpong_kern_bpf *open_and_load();
	static inline int load(struct pingpong_kern_bpf *skel);
	static inline int attach(struct pingpong_kern_bpf *skel);
	static inline void detach(struct pingpong_kern_bpf *skel);
	static inline void destroy(struct pingpong_kern_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
pingpong_kern_bpf__destroy(struct pingpong_kern_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
pingpong_kern_bpf__create_skeleton(struct pingpong_kern_bpf *obj);

static inline struct pingpong_kern_bpf *
pingpong_kern_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct pingpong_kern_bpf *obj;
	int err;

	obj = (struct pingpong_kern_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = pingpong_kern_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	pingpong_kern_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct pingpong_kern_bpf *
pingpong_kern_bpf__open(void)
{
	return pingpong_kern_bpf__open_opts(NULL);
}

static inline int
pingpong_kern_bpf__load(struct pingpong_kern_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct pingpong_kern_bpf *
pingpong_kern_bpf__open_and_load(void)
{
	struct pingpong_kern_bpf *obj;
	int err;

	obj = pingpong_kern_bpf__open();
	if (!obj)
		return NULL;
	err = pingpong_kern_bpf__load(obj);
	if (err) {
		pingpong_kern_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
pingpong_kern_bpf__attach(struct pingpong_kern_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
pingpong_kern_bpf__detach(struct pingpong_kern_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *pingpong_kern_bpf__elf_bytes(size_t *sz);

static inline int
pingpong_kern_bpf__create_skeleton(struct pingpong_kern_bpf *obj)
{
	struct bpf_object_skeleton *s;
	struct bpf_map_skeleton *map __attribute__((unused));
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "pingpong_kern_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = 24;
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt,
			sizeof(*s->maps) > 24 ? sizeof(*s->maps) : 24);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	map = (struct bpf_map_skeleton *)((char *)s->maps + 0 * s->map_skel_sz);
	map->name = "events";
	map->map = &obj->maps.events;

	/* programs */
	s->prog_cnt = 2;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "handle_tcp_sendmsg";
	s->progs[0].prog = &obj->progs.handle_tcp_sendmsg;
	s->progs[0].link = &obj->links.handle_tcp_sendmsg;

	s->progs[1].name = "handle_tcp_rcv";
	s->progs[1].prog = &obj->progs.handle_tcp_rcv;
	s->progs[1].link = &obj->links.handle_tcp_rcv;

	s->data = pingpong_kern_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *pingpong_kern_bpf__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xe0\x1b\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1e\0\
\x01\0\x85\0\0\0\x05\0\0\0\xbf\x06\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xbf\x07\0\0\
\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x10\0\0\0\xb7\x03\0\0\
\0\0\0\0\x85\0\0\0\x83\0\0\0\x15\0\x06\0\0\0\0\0\x7b\x60\0\0\0\0\0\0\x77\x07\0\
\0\x20\0\0\0\x63\x70\x08\0\0\0\0\0\xbf\x01\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\
\0\0\0\x84\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x85\0\0\0\x05\0\0\0\xbf\
\x06\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\xb7\x02\0\0\x10\0\0\0\xb7\x03\0\0\0\0\0\0\x85\0\0\0\x83\0\0\0\
\x15\0\x06\0\0\0\0\0\x7b\x60\0\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\x08\0\0\
\0\0\0\xbf\x01\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x84\0\0\0\xb7\0\0\0\0\
\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x44\x75\x61\x6c\x20\
\x42\x53\x44\x2f\x47\x50\x4c\0\x96\0\0\0\x05\0\x08\0\x06\0\0\0\x18\0\0\0\x21\0\
\0\0\x4a\0\0\0\x53\0\0\0\x5c\0\0\0\x85\0\0\0\x01\x02\x04\x10\x90\x01\x01\x56\0\
\x01\x02\x04\x20\x50\x10\x77\0\x10\x20\x25\xa8\xaf\x80\x80\0\xa8\xb3\x80\x80\0\
\x9f\x04\x60\x80\x01\x0d\x77\0\xa8\xaf\x80\x80\0\xa8\xb3\x80\x80\0\x9f\0\x01\
\x02\x04\x48\x80\x01\x01\x50\0\x01\x03\x04\x10\x90\x01\x01\x56\0\x01\x03\x04\
\x20\x50\x10\x77\0\x10\x20\x25\xa8\xaf\x80\x80\0\xa8\xb3\x80\x80\0\x9f\x04\x60\
\x80\x01\x0d\x77\0\xa8\xaf\x80\x80\0\xa8\xb3\x80\x80\0\x9f\0\x01\x03\x04\x48\
\x80\x01\x01\x50\0\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\x17\x10\x17\x1b\x25\
\x11\x01\x55\x23\x73\x17\x74\x17\x8c\x01\x17\0\0\x02\x24\0\x03\x25\x3e\x0b\x0b\
\x0b\0\0\x03\x34\0\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x04\x01\
\x01\x49\x13\0\0\x05\x21\0\x49\x13\x37\x0b\0\0\x06\x24\0\x03\x25\x0b\x0b\x3e\
\x0b\0\0\x07\x13\x01\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x08\x0d\0\x03\x25\x49\x13\x3a\
\x0b\x3b\x0b\x38\x0b\0\0\x09\x0f\0\x49\x13\0\0\x0a\x21\0\x49\x13\x37\x06\0\0\
\x0b\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x1c\x0f\0\0\x0c\x15\0\x49\x13\x27\
\x19\0\0\x0d\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x05\0\0\x0e\x34\0\x03\x25\x49\
\x13\x3a\x0b\x3b\x05\x1c\x0f\0\0\x0f\x15\x01\x49\x13\x27\x19\0\0\x10\x05\0\x49\
\x13\0\0\x11\x0f\0\0\0\x12\x15\x01\x27\x19\0\0\x13\x2e\x01\x11\x1b\x12\x06\x40\
\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x14\x05\0\x03\
\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x15\x34\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\
\x13\0\0\x16\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x17\x13\x01\x03\x25\
\x0b\x05\x3a\x0b\x3b\x06\0\0\x18\x0d\0\x49\x13\x3a\x0b\x3b\x06\x38\x0b\0\0\x19\
\x17\x01\x0b\x05\x3a\x0b\x3b\x06\0\0\x1a\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x06\
\x38\x0b\0\0\x1b\x13\x01\x0b\x05\x3a\x0b\x3b\x06\0\0\x1c\x0d\0\x03\x25\x49\x13\
\x3a\x0b\x3b\x06\x38\x05\0\0\0\x1a\x03\0\0\x05\0\x01\x08\0\0\0\0\x01\0\x1d\0\
\x01\x08\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\x08\0\0\0\x0c\0\0\0\x0c\0\0\0\x02\
\x11\x07\x08\x02\x10\x07\x04\x03\x03\x42\0\0\0\0\x4a\x02\xa1\0\x04\x4e\0\0\0\
\x05\x52\0\0\0\x0d\0\x02\x04\x06\x01\x06\x05\x08\x07\x03\x06\x61\0\0\0\0\x16\
\x02\xa1\x01\x07\x10\0\x12\x08\x07\x78\0\0\0\0\x14\0\x08\x09\x8d\0\0\0\0\x15\
\x08\0\x09\x7d\0\0\0\x04\x89\0\0\0\x05\x52\0\0\0\x1b\0\x02\x08\x05\x04\x09\x92\
\0\0\0\x04\x89\0\0\0\x0a\x52\0\0\0\0\0\x04\0\0\x0b\x0a\xaa\0\0\0\x02\x72\x05\
\x09\xaf\0\0\0\x0c\xb4\0\0\0\x0d\xbd\0\0\0\x0c\x01\x8c\xd6\x02\x0b\x07\x08\x0e\
\x0d\xaa\0\0\0\x02\x72\x01\x0e\x0e\x0e\xd6\0\0\0\x02\x68\x0c\x83\x01\x09\xdb\0\
\0\0\x0f\xf0\0\0\0\x10\xf0\0\0\0\x10\xb4\0\0\0\x10\xb4\0\0\0\0\x11\x0e\x0f\xfc\
\0\0\0\x02\x7a\x0c\x84\x01\x09\x01\x01\0\0\x12\x10\xf0\0\0\0\x10\xb4\0\0\0\0\
\x13\x02\x90\0\0\0\x01\x5a\x12\0\x1a\x89\0\0\0\x14\x1f\0\x1a\xbc\x01\0\0\x15\0\
\x14\0\x1d\xb4\0\0\0\x15\x01\x15\0\x1e\x73\x01\0\0\x15\x02\x18\0\x1c\x80\x01\0\
\0\0\x13\x03\x90\0\0\0\x01\x5a\x13\0\x35\x89\0\0\0\x14\x1f\0\x35\xbc\x01\0\0\
\x15\x03\x14\0\x38\xb4\0\0\0\x15\x04\x15\0\x39\x73\x01\0\0\x15\x05\x18\0\x37\
\x80\x01\0\0\0\x0d\x7c\x01\0\0\x17\x01\xdc\xd7\x02\x16\x07\x04\x09\x85\x01\0\0\
\x16\x1e\x10\0\x08\x08\x19\xb4\0\0\0\0\x0a\0\x08\x15\x73\x01\0\0\0\x0b\x08\x08\
\x1a\xaf\x01\0\0\0\x0c\x0c\x08\x1d\xaf\x01\0\0\0\x0d\x0e\0\x0d\xb8\x01\0\0\x1c\
\x01\x3c\xd7\x02\x1b\x07\x02\x09\xc1\x01\0\0\x17\x32\x50\x01\x01\xcf\x19\x01\0\
\x18\xd5\x01\0\0\x01\xd0\x19\x01\0\0\x19\x10\x01\x01\xd0\x19\x01\0\x1a\x20\x99\
\x02\0\0\x01\xd1\x19\x01\0\0\x18\xf4\x01\0\0\x01\xd2\x19\x01\0\0\x1b\x10\x01\
\x01\xd2\x19\x01\0\x1a\x21\xe1\x02\0\0\x01\xd3\x19\x01\0\0\x1a\x22\xed\x02\0\0\
\x01\xd4\x19\x01\0\xf8\x1c\x23\xed\x02\0\0\x01\xd5\x19\x01\0\0\x01\x1c\x24\xed\
\x02\0\0\x01\xd6\x19\x01\0\x08\x01\0\0\x1c\x27\xed\x02\0\0\x01\xd9\x19\x01\0\
\x10\x01\x1c\x28\xf6\x02\0\0\x01\xda\x19\x01\0\x18\x01\x1c\x2b\x08\x03\0\0\x01\
\xdb\x19\x01\0\x1c\x01\x1c\x2d\xed\x02\0\0\x01\xdc\x19\x01\0\x20\x01\x1c\x2e\
\xed\x02\0\0\x01\xdd\x19\x01\0\x28\x01\x1c\x2f\x11\x03\0\0\x01\xde\x19\x01\0\
\x30\x01\x1c\x30\xed\x02\0\0\x01\xdf\x19\x01\0\x40\x01\x1c\x31\xed\x02\0\0\x01\
\xe0\x19\x01\0\x48\x01\0\x17\x25\x10\x01\x01\xc6\x19\x01\0\x1a\x21\xd5\x02\0\0\
\x01\xc7\x19\x01\0\0\x1a\x22\xb4\0\0\0\x01\xc8\x19\x01\0\xf8\x1c\x23\xb4\0\0\0\
\x01\xc9\x19\x01\0\0\x01\x1c\x24\xb4\0\0\0\x01\xca\x19\x01\0\x08\x01\0\x04\xb4\
\0\0\0\x05\x52\0\0\0\x1f\0\x04\xed\x02\0\0\x05\x52\0\0\0\x1f\0\x0d\xb4\0\0\0\
\x26\x01\x94\xd6\x0d\xff\x02\0\0\x2a\x01\x18\xd6\x0d\x89\0\0\0\x29\x01\x12\xd6\
\x0d\x73\x01\0\0\x2c\x01\xea\xd7\x04\xed\x02\0\0\x05\x52\0\0\0\x02\0\0\x15\0\0\
\0\x05\0\x08\0\x01\0\0\0\x04\0\0\0\x03\x02\x90\x01\x03\x03\x90\x01\0\xd0\0\0\0\
\x05\0\0\0\0\0\0\0\x55\0\0\0\x71\0\0\0\x8f\0\0\0\x97\0\0\0\x9c\0\0\0\xb0\0\0\0\
\xb7\0\0\0\xbc\0\0\0\xc0\0\0\0\xcc\0\0\0\xdd\0\0\0\xf0\0\0\0\xf6\0\0\0\x0f\x01\
\0\0\x23\x01\0\0\x36\x01\0\0\x49\x01\0\0\x5c\x01\0\0\x6f\x01\0\0\x7e\x01\0\0\
\x81\x01\0\0\x85\x01\0\0\x92\x01\0\0\x98\x01\0\0\x9a\x01\0\0\xa7\x01\0\0\xad\
\x01\0\0\xbc\x01\0\0\xc2\x01\0\0\xc8\x01\0\0\xce\x01\0\0\xd2\x01\0\0\xdc\x01\0\
\0\xe1\x01\0\0\xe4\x01\0\0\xe7\x01\0\0\xee\x01\0\0\xfb\x01\0\0\xff\x01\0\0\x07\
\x02\0\0\x11\x02\0\0\x17\x02\0\0\x1b\x02\0\0\x23\x02\0\0\x27\x02\0\0\x32\x02\0\
\0\x3b\x02\0\0\x46\x02\0\0\x57\x02\0\0\x60\x02\0\0\x55\x62\x75\x6e\x74\x75\x20\
\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x31\x39\x2e\x31\x2e\
\x37\x20\x28\x2b\x2b\x32\x30\x32\x35\x30\x31\x31\x34\x31\x30\x33\x33\x33\x32\
\x2b\x63\x64\x37\x30\x38\x30\x32\x39\x65\x30\x62\x32\x2d\x31\x7e\x65\x78\x70\
\x31\x7e\x32\x30\x32\x35\x30\x31\x31\x34\x31\x30\x33\x34\x34\x36\x2e\x37\x38\
\x29\0\x73\x72\x63\x2f\x62\x70\x66\x2f\x70\x69\x6e\x67\x70\x6f\x6e\x67\x5f\x6b\
\x65\x72\x6e\x2e\x62\x70\x66\x2e\x63\0\x2f\x63\x6f\x6e\x66\x69\x67\x2f\x72\x65\
\x70\x6f\x73\x69\x74\x6f\x72\x69\x65\x73\x2f\x50\x69\x6e\x67\x50\x6f\x6e\x67\0\
\x4c\x49\x43\x45\x4e\x53\x45\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\
\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x65\x76\x65\x6e\x74\x73\0\
\x74\x79\x70\x65\0\x69\x6e\x74\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\
\x62\x70\x66\x5f\x6b\x74\x69\x6d\x65\x5f\x67\x65\x74\x5f\x6e\x73\0\x75\x6e\x73\
\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\
\x34\0\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\
\x64\x5f\x74\x67\x69\x64\0\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x72\
\x65\x73\x65\x72\x76\x65\0\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x73\
\x75\x62\x6d\x69\x74\0\x44\x57\x5f\x41\x54\x45\x5f\x75\x6e\x73\x69\x67\x6e\x65\
\x64\x5f\x33\x32\0\x44\x57\x5f\x41\x54\x45\x5f\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x5f\x36\x34\0\x68\x61\x6e\x64\x6c\x65\x5f\x74\x63\x70\x5f\x73\x65\x6e\x64\x6d\
\x73\x67\0\x68\x61\x6e\x64\x6c\x65\x5f\x74\x63\x70\x5f\x72\x63\x76\0\x74\x73\0\
\x70\x69\x64\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x75\
\x33\x32\0\x65\0\x74\x69\x6d\x65\x73\x74\x61\x6d\x70\x5f\x6e\x73\0\x73\x70\x6f\
\x72\x74\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x5f\x5f\
\x75\x31\x36\0\x64\x70\x6f\x72\x74\0\x65\x76\x65\x6e\x74\0\x63\x74\x78\0\x75\
\x73\x65\x72\x5f\x72\x65\x67\x73\0\x72\x65\x67\x73\0\x73\x70\0\x70\x63\0\x70\
\x73\x74\x61\x74\x65\0\x75\x73\x65\x72\x5f\x70\x74\x5f\x72\x65\x67\x73\0\x75\
\x36\x34\0\x6f\x72\x69\x67\x5f\x78\x30\0\x73\x79\x73\x63\x61\x6c\x6c\x6e\x6f\0\
\x5f\x5f\x73\x33\x32\0\x73\x33\x32\0\x75\x6e\x75\x73\x65\x64\x32\0\x75\x33\x32\
\0\x73\x64\x65\x69\x5f\x74\x74\x62\x72\x31\0\x70\x6d\x72\x5f\x73\x61\x76\x65\0\
\x73\x74\x61\x63\x6b\x66\x72\x61\x6d\x65\0\x6c\x6f\x63\x6b\x64\x65\x70\x5f\x68\
\x61\x72\x64\x69\x72\x71\x73\0\x65\x78\x69\x74\x5f\x72\x63\x75\0\x70\x74\x5f\
\x72\x65\x67\x73\0\x24\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x14\x03\0\0\x14\x03\
\0\0\x7e\x02\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\
\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x1b\0\0\0\x05\0\0\0\0\0\
\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\
\0\x02\0\0\0\x04\0\0\0\0\0\x04\0\0\0\0\0\x02\0\0\x04\x10\0\0\0\x19\0\0\0\x01\0\
\0\0\0\0\0\0\x1e\0\0\0\x05\0\0\0\x40\0\0\0\x2a\0\0\0\0\0\0\x0e\x07\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\x02\x0a\0\0\0\x31\0\0\0\x09\0\0\x04\x50\x01\0\0\0\0\0\0\x0b\
\0\0\0\0\0\0\0\x39\0\0\0\x11\0\0\0\x80\x08\0\0\x41\0\0\0\x13\0\0\0\xc0\x08\0\0\
\x4b\0\0\0\x15\0\0\0\xe0\x08\0\0\x53\0\0\0\x11\0\0\0\0\x09\0\0\x5e\0\0\0\x11\0\
\0\0\x40\x09\0\0\x67\0\0\0\x18\0\0\0\x80\x09\0\0\x72\0\0\0\x11\0\0\0\0\x0a\0\0\
\x83\0\0\0\x11\0\0\0\x40\x0a\0\0\0\0\0\0\x02\0\0\x05\x10\x01\0\0\x8c\0\0\0\x0c\
\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x96\0\0\0\x04\0\0\x04\x10\x01\0\0\xa3\
\0\0\0\x0f\0\0\0\0\0\0\0\xa8\0\0\0\x0d\0\0\0\xc0\x07\0\0\xab\0\0\0\x0d\0\0\0\0\
\x08\0\0\xae\0\0\0\x0d\0\0\0\x40\x08\0\0\xb5\0\0\0\0\0\0\x08\x0e\0\0\0\xbb\0\0\
\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0d\0\0\0\x04\0\0\0\
\x1f\0\0\0\0\0\0\0\x04\0\0\x04\x10\x01\0\0\xa3\0\0\0\x12\0\0\0\0\0\0\0\xa8\0\0\
\0\x11\0\0\0\xc0\x07\0\0\xab\0\0\0\x11\0\0\0\0\x08\0\0\xae\0\0\0\x11\0\0\0\x40\
\x08\0\0\xce\0\0\0\0\0\0\x08\x0d\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x11\0\0\0\x04\
\0\0\0\x1f\0\0\0\xd2\0\0\0\0\0\0\x08\x14\0\0\0\xd6\0\0\0\0\0\0\x08\x02\0\0\0\
\xdc\0\0\0\0\0\0\x08\x16\0\0\0\xe0\0\0\0\0\0\0\x08\x17\0\0\0\xe6\0\0\0\0\0\0\
\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x11\0\0\0\x04\0\0\0\x02\0\0\
\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xf3\0\0\0\x09\0\0\0\xf7\0\0\0\x01\0\0\x0c\x19\
\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xf3\0\0\0\x09\0\0\0\x39\x02\0\0\x01\0\0\
\x0c\x1b\0\0\0\x63\x02\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\
\0\0\0\x1d\0\0\0\x04\0\0\0\x0d\0\0\0\x68\x02\0\0\0\0\0\x0e\x1e\0\0\0\x01\0\0\0\
\x70\x02\0\0\x01\0\0\x0f\0\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\x76\x02\0\0\x01\0\
\0\x0f\0\0\0\0\x1f\0\0\0\0\0\0\0\x0d\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\
\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\
\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x65\x76\x65\x6e\x74\x73\0\x70\
\x74\x5f\x72\x65\x67\x73\0\x6f\x72\x69\x67\x5f\x78\x30\0\x73\x79\x73\x63\x61\
\x6c\x6c\x6e\x6f\0\x75\x6e\x75\x73\x65\x64\x32\0\x73\x64\x65\x69\x5f\x74\x74\
\x62\x72\x31\0\x70\x6d\x72\x5f\x73\x61\x76\x65\0\x73\x74\x61\x63\x6b\x66\x72\
\x61\x6d\x65\0\x6c\x6f\x63\x6b\x64\x65\x70\x5f\x68\x61\x72\x64\x69\x72\x71\x73\
\0\x65\x78\x69\x74\x5f\x72\x63\x75\0\x75\x73\x65\x72\x5f\x72\x65\x67\x73\0\x75\
\x73\x65\x72\x5f\x70\x74\x5f\x72\x65\x67\x73\0\x72\x65\x67\x73\0\x73\x70\0\x70\
\x63\0\x70\x73\x74\x61\x74\x65\0\x5f\x5f\x75\x36\x34\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x75\x36\x34\0\x73\x33\x32\0\
\x5f\x5f\x73\x33\x32\0\x75\x33\x32\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\
\x6e\x65\x64\x20\x69\x6e\x74\0\x63\x74\x78\0\x68\x61\x6e\x64\x6c\x65\x5f\x74\
\x63\x70\x5f\x73\x65\x6e\x64\x6d\x73\x67\0\x6b\x70\x72\x6f\x62\x65\x2f\x74\x63\
\x70\x5f\x73\x65\x6e\x64\x6d\x73\x67\0\x2f\x63\x6f\x6e\x66\x69\x67\x2f\x72\x65\
\x70\x6f\x73\x69\x74\x6f\x72\x69\x65\x73\x2f\x50\x69\x6e\x67\x50\x6f\x6e\x67\
\x2f\x73\x72\x63\x2f\x62\x70\x66\x2f\x70\x69\x6e\x67\x70\x6f\x6e\x67\x5f\x6b\
\x65\x72\x6e\x2e\x62\x70\x66\x2e\x63\0\x20\x20\x20\x20\x5f\x5f\x75\x36\x34\x20\
\x74\x73\x20\x3d\x20\x62\x70\x66\x5f\x6b\x74\x69\x6d\x65\x5f\x67\x65\x74\x5f\
\x6e\x73\x28\x29\x3b\0\x20\x20\x20\x20\x5f\x5f\x75\x33\x32\x20\x70\x69\x64\x20\
\x3d\x20\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\
\x69\x64\x5f\x74\x67\x69\x64\x28\x29\x20\x3e\x3e\x20\x33\x32\x3b\0\x20\x20\x20\
\x20\x65\x20\x3d\x20\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x72\x65\
\x73\x65\x72\x76\x65\x28\x26\x65\x76\x65\x6e\x74\x73\x2c\x20\x73\x69\x7a\x65\
\x6f\x66\x28\x2a\x65\x29\x2c\x20\x30\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\
\x21\x65\x29\0\x20\x20\x20\x20\x65\x2d\x3e\x74\x69\x6d\x65\x73\x74\x61\x6d\x70\
\x5f\x6e\x73\x20\x3d\x20\x74\x73\x3b\0\x20\x20\x20\x20\x65\x2d\x3e\x70\x69\x64\
\x20\x3d\x20\x70\x69\x64\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x72\x69\x6e\x67\
\x62\x75\x66\x5f\x73\x75\x62\x6d\x69\x74\x28\x65\x2c\x20\x30\x29\x3b\0\x7d\0\
\x68\x61\x6e\x64\x6c\x65\x5f\x74\x63\x70\x5f\x72\x63\x76\0\x6b\x70\x72\x6f\x62\
\x65\x2f\x74\x63\x70\x5f\x72\x63\x76\x5f\x65\x73\x74\x61\x62\x6c\x69\x73\x68\
\x65\x64\0\x63\x68\x61\x72\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2e\x6d\x61\x70\x73\
\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x24\0\0\0\
\x24\0\0\0\x34\x01\0\0\x58\x01\0\0\0\0\0\0\x08\0\0\0\x0a\x01\0\0\x01\0\0\0\0\0\
\0\0\x1a\0\0\0\x48\x02\0\0\x01\0\0\0\0\0\0\0\x1c\0\0\0\x10\0\0\0\x0a\x01\0\0\
\x09\0\0\0\0\0\0\0\x1d\x01\0\0\x57\x01\0\0\x10\x74\0\0\x10\0\0\0\x1d\x01\0\0\
\x7a\x01\0\0\x11\x78\0\0\x20\0\0\0\x1d\x01\0\0\xac\x01\0\0\x09\x84\0\0\x48\0\0\
\0\x1d\x01\0\0\xe1\x01\0\0\x09\x88\0\0\x50\0\0\0\x1d\x01\0\0\xed\x01\0\0\x15\
\x9c\0\0\x58\0\0\0\x1d\x01\0\0\x7a\x01\0\0\x2c\x78\0\0\x60\0\0\0\x1d\x01\0\0\
\x07\x02\0\0\x0c\xa0\0\0\x68\0\0\0\x1d\x01\0\0\x19\x02\0\0\x05\xc0\0\0\x80\0\0\
\0\x1d\x01\0\0\x37\x02\0\0\x01\xc8\0\0\x48\x02\0\0\x09\0\0\0\0\0\0\0\x1d\x01\0\
\0\x57\x01\0\0\x10\xe0\0\0\x10\0\0\0\x1d\x01\0\0\x7a\x01\0\0\x11\xe4\0\0\x20\0\
\0\0\x1d\x01\0\0\xac\x01\0\0\x09\xec\0\0\x48\0\0\0\x1d\x01\0\0\xe1\x01\0\0\x09\
\xf0\0\0\x50\0\0\0\x1d\x01\0\0\xed\x01\0\0\x15\x04\x01\0\x58\0\0\0\x1d\x01\0\0\
\x7a\x01\0\0\x2c\xe4\0\0\x60\0\0\0\x1d\x01\0\0\x07\x02\0\0\x0c\x08\x01\0\x68\0\
\0\0\x1d\x01\0\0\x19\x02\0\0\x05\x18\x01\0\x80\0\0\0\x1d\x01\0\0\x37\x02\0\0\
\x01\x20\x01\0\0\0\0\0\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x90\0\0\0\0\0\0\0\xd5\0\0\0\x05\0\x08\0\x69\0\0\0\x08\x01\x01\xfb\x0e\x0d\
\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\0\x1e\0\0\0\x26\0\0\
\0\x03\x01\x1f\x02\x0f\x05\x1e\x03\x38\0\0\0\0\x2d\x5f\x82\xb1\xcf\x9b\x0b\x7b\
\xe1\x3a\xad\x9d\x3b\xee\xc6\x98\x54\0\0\0\x01\x39\x4f\x02\xfa\x4a\x12\x84\xf4\
\x61\x22\x55\xd5\x44\x60\xc0\xc8\x5e\0\0\0\x02\x09\xcf\xcd\x71\x69\xc2\x4b\xec\
\x44\x8f\x30\x58\x2e\x8c\x6d\xb9\x04\0\x05\x10\x0a\0\x09\x02\0\0\0\0\0\0\0\0\
\x03\x1c\x01\x05\x11\x2f\x05\x09\x31\x59\x05\x15\x25\x05\x2c\x03\x77\x20\x05\
\x0c\x03\x0a\x20\x05\x05\x28\x05\x01\x3e\x02\x02\0\x01\x01\x04\0\x05\x10\x0a\0\
\x09\x02\0\0\0\0\0\0\0\0\x03\x37\x01\x05\x11\x2f\x05\x09\x30\x59\x05\x15\x25\
\x05\x2c\x03\x78\x20\x05\x0c\x03\x09\x20\x05\x05\x24\x05\x01\x3e\x02\x02\0\x01\
\x01\x2f\x63\x6f\x6e\x66\x69\x67\x2f\x72\x65\x70\x6f\x73\x69\x74\x6f\x72\x69\
\x65\x73\x2f\x50\x69\x6e\x67\x50\x6f\x6e\x67\0\x73\x72\x63\x2f\x62\x70\x66\0\
\x62\x75\x69\x6c\x64\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x73\x72\
\x63\x2f\x62\x70\x66\x2f\x70\x69\x6e\x67\x70\x6f\x6e\x67\x5f\x6b\x65\x72\x6e\
\x2e\x62\x70\x66\x2e\x63\0\x76\x6d\x6c\x69\x6e\x75\x78\x2e\x68\0\x62\x70\x66\
\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x01\0\0\x04\0\xf1\xff\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x03\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x09\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x03\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x17\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x03\0\x1b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\0\0\0\x12\0\x03\0\0\0\0\0\
\0\0\0\0\x90\0\0\0\0\0\0\0\x51\0\0\0\x11\0\x07\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\
\0\0\x0f\0\0\0\x12\0\x05\0\0\0\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\x5d\x01\0\0\x11\0\
\x08\0\0\0\0\0\0\0\0\0\x0d\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\0\x0e\0\0\0\
\x20\0\0\0\0\0\0\0\x01\0\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\
\x11\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x15\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\
\x23\0\0\0\0\0\0\0\x03\0\0\0\x09\0\0\0\x27\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\
\x2b\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x0c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x14\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x1c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x24\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x2c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x34\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x3c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x44\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x4c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x54\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x5c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x64\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x6c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x74\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x7c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x84\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x8c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x94\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x9c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xa0\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\xa4\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xa8\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\xac\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xb0\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\xb4\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xb8\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\xbc\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xc0\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\xc4\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xc8\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\xcc\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\xd0\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\
\x08\0\0\0\0\0\0\0\x02\0\0\0\x10\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0e\0\0\0\
\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x20\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\0\
\x0c\x03\0\0\0\0\0\0\x04\0\0\0\x0e\0\0\0\x24\x03\0\0\0\0\0\0\x04\0\0\0\x10\0\0\
\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x3c\0\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\
\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\
\xd0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xe8\0\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\
\xf8\0\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\x08\x01\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\
\x18\x01\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\x28\x01\0\0\0\0\0\0\x04\0\0\0\x03\0\0\
\0\x38\x01\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\x48\x01\0\0\0\0\0\0\x04\0\0\0\x03\0\
\0\0\x58\x01\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\x68\x01\0\0\0\0\0\0\x04\0\0\0\x03\
\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\
\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x30\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\
\0\x22\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\
\x2a\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\
\x4b\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0c\0\0\0\
\x7d\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\xaf\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\0\
\x0d\x0f\x0e\x10\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\x76\0\x68\
\x61\x6e\x64\x6c\x65\x5f\x74\x63\x70\x5f\x72\x63\x76\0\x2e\x74\x65\x78\x74\0\
\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x2e\x64\x65\x62\x75\x67\x5f\
\x72\x6e\x67\x6c\x69\x73\x74\x73\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\
\x69\x73\x74\x73\0\x65\x76\x65\x6e\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\
\x75\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x2e\x6d\x61\x70\x73\
\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\
\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\
\x64\x64\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\
\x68\x61\x6e\x64\x6c\x65\x5f\x74\x63\x70\x5f\x73\x65\x6e\x64\x6d\x73\x67\0\x2e\
\x72\x65\x6c\x6b\x70\x72\x6f\x62\x65\x2f\x74\x63\x70\x5f\x73\x65\x6e\x64\x6d\
\x73\x67\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\
\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\
\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\x6d\x65\0\x2e\x72\
\x65\x6c\x6b\x70\x72\x6f\x62\x65\x2f\x74\x63\x70\x5f\x72\x63\x76\x5f\x65\x73\
\x74\x61\x62\x6c\x69\x73\x68\x65\x64\0\x70\x69\x6e\x67\x70\x6f\x6e\x67\x5f\x6b\
\x65\x72\x6e\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\
\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\
\x53\x45\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x44\
\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x74\x1a\0\0\0\0\0\0\x65\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1e\0\0\0\x01\0\
\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\0\0\0\x01\0\0\0\x06\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc3\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x60\x14\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1d\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\
\0\x10\0\0\0\0\0\0\0\x15\x01\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xd0\0\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x11\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\x14\0\0\0\
\0\0\0\x10\0\0\0\0\0\0\0\x1d\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x6f\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\x01\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\0\0\0\
\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\x01\0\0\0\0\0\0\x0d\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x41\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7d\x01\0\0\0\0\0\0\x9a\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x17\x02\0\0\0\0\0\0\x5e\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\xa4\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x75\x03\0\0\0\0\0\0\x1e\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xa0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\x14\0\0\
\0\0\0\0\x60\0\0\0\0\0\0\0\x1d\0\0\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\
\0\0\x31\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x93\x06\0\0\0\0\0\0\
\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5c\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xac\x06\0\0\0\0\0\0\xd4\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\0\0\0\x09\0\0\0\x40\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe0\x14\0\0\0\0\0\0\x30\x03\0\0\0\0\0\0\x1d\0\0\0\
\x0e\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x75\0\0\0\x01\0\0\0\x30\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x80\x07\0\0\0\0\0\0\x68\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x94\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\xe8\x09\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x90\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\
\x18\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1d\0\0\0\x11\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x58\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x0a\0\0\
\0\0\0\0\xaa\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x54\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\x18\0\0\0\0\0\0\
\x20\0\0\0\0\0\0\0\x1d\0\0\0\x13\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x28\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xbc\x0f\0\0\0\0\0\0\x78\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x24\0\0\0\x09\0\0\
\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\x18\0\0\0\0\0\0\x40\x01\0\0\0\0\0\0\
\x1d\0\0\0\x15\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x04\x01\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x11\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\xb0\x19\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1d\0\0\0\x17\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xf4\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x78\x11\0\0\0\0\0\0\xd9\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xf0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf0\
\x19\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x1d\0\0\0\x19\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x80\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x51\x12\0\0\
\0\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\xda\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\x70\x1a\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\x1d\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4c\
\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x12\0\0\0\0\0\0\x98\x01\
\0\0\0\0\0\0\x01\0\0\0\x0d\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct pingpong_kern_bpf *pingpong_kern_bpf::open(const struct bpf_object_open_opts *opts) { return pingpong_kern_bpf__open_opts(opts); }
struct pingpong_kern_bpf *pingpong_kern_bpf::open_and_load() { return pingpong_kern_bpf__open_and_load(); }
int pingpong_kern_bpf::load(struct pingpong_kern_bpf *skel) { return pingpong_kern_bpf__load(skel); }
int pingpong_kern_bpf::attach(struct pingpong_kern_bpf *skel) { return pingpong_kern_bpf__attach(skel); }
void pingpong_kern_bpf::detach(struct pingpong_kern_bpf *skel) { pingpong_kern_bpf__detach(skel); }
void pingpong_kern_bpf::destroy(struct pingpong_kern_bpf *skel) { pingpong_kern_bpf__destroy(skel); }
const void *pingpong_kern_bpf::elf_bytes(size_t *sz) { return pingpong_kern_bpf__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
pingpong_kern_bpf__assert(struct pingpong_kern_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __PINGPONG_KERN_BPF_SKEL_H__ */
